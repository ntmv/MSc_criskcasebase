"0","set.seed(2023)"
"0","cv_fit_relaxed = cv.glmnet(x_train, y_train, gamma = 0, relax = TRUE)"
"0",""
"0","cv_lambda_relaxed_min = cv_fit_relaxed$relaxed$lambda.min"
"0","cv_lambda_relaxed_1se = cv_fit_relaxed$relaxed$lambda.1se"
"0","cv_lambda_min_index = cv_fit_relaxed$relaxed$index[1]"
"0","cv_lambda_1se_index = cv_fit_relaxed$relaxed$index[2]"
"0",""
"0","coef_cv_fit_relaxed_1se = cv_fit_relaxed$glmnet.fit$relaxed$beta[, cv_lambda_1se_index]"
"0","coef_cv_fit_relaxed_min = cv_fit_relaxed$glmnet.fit$relaxed$beta[, cv_lambda_min_index]"
"0",""
"0","non_zero_coef_relaxed_1se = coef_cv_fit_relaxed_1se[coef_cv_fit_relaxed_1se != 0]"
"0","non_zero_coef_relaxed_1se_indeces = which(coef_cv_fit_relaxed_1se %in% non_zero_coef_relaxed_1se)"
"0",""
"0","non_zero_coef_relaxed_min = coef_cv_fit_relaxed_min[coef_cv_fit_relaxed_min != 0]"
"0","non_zero_coef_relaxed_min_indeces = which(coef_cv_fit_relaxed_min %in% non_zero_coef_relaxed_min)"
"0",""
"0","# new_x_train = x_train[, non_zero_coef_relaxed_indeces]"
"0","# #relaxed_then_OLS = lm(y_train~new_x_train)"
"0","# "
"0","# "
"0","# attempt1 = cv.glmnet(x_train, y_train, family=""gaussian"", relax = FALSE, alpha = 1)"
"0","# lambda_min = attempt1$lambda.min"
"0","# lambda_1se = attempt1$lambda.1se"
"0",""
"0",""
"0",""
"0","coefficient_values = rbind(coefficient_values, c(0, lapply(coef_cv_fit_relaxed_min, function(x) round(x, 3))), c(0, lapply(coef_cv_fit_relaxed_1se, function(x) round(x, 3))))"
"0","colnames(coefficient_values) = coefficient_names"
