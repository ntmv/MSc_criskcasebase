"0","data(QuickStartExample)"
"0","set.seed(2023)"
"0",""
"0","train.index = caret::createDataPartition(QuickStartExample$y, p = 0.80, list = FALSE)"
"0",""
"0","x_train = QuickStartExample$x[train.index,]"
"0","y_train = QuickStartExample$y[train.index,]"
"0",""
"0","x_test = QuickStartExample$x[-train.index,]"
"0","y_test = QuickStartExample$y[-train.index,]"
"0",""
"0","fit_relaxed = glmnet(x_train, y_train, gamma = 0, relax = TRUE)"
"0","cv_fit_relaxed = cv.glmnet(x_train, y_train, gamma = 0, relax = TRUE)"
"0","lambda_relaxed_min = cv_fit_relaxed$lambda.min"
"0","lambda_relaxed_1se = cv_fit_relaxed$lambda.1se"
"0",""
"0","coef <- coef(cv_fit_relaxed)"
"0","non_zero_coef <- coef[coef != 0]"
"2","<sparse>[ <logic> ]: .M.sub.i.logical() maybe inefficient
"
"0","non_zero_coef = non_zero_coef[-1]"
"0","best_fit_index = cv_fit_relaxed$relaxed$index[2]"
"0","which(as.list(fit_lasso_cv_lambda$glmnet.fit$beta[, best_fit_index]) %in% non_zero_coef)"
"1","integer(0)
"
